// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Marshal from "../shared/Marshal.js";
import * as GenreModel from "./GenreModel.js";
import * as Json$JsonCombinators from "@glennsl/rescript-json-combinators/src/Json.js";
import * as Json_Decode$JsonCombinators from "@glennsl/rescript-json-combinators/src/Json_Decode.js";

var video = Json_Decode$JsonCombinators.object(function (fields) {
      return {
              id: Marshal.to_opt(fields, "id", Json_Decode$JsonCombinators.string),
              key: Marshal.to_opt(fields, "key", Json_Decode$JsonCombinators.string),
              site: Marshal.to_opt(fields, "site", Json_Decode$JsonCombinators.string)
            };
    });

var image = Json_Decode$JsonCombinators.object(function (fields) {
      return {
              aspect_ratio: Marshal.to_opt(fields, "aspect_ratio", Json_Decode$JsonCombinators.$$float),
              height: Marshal.to_opt(fields, "height", Json_Decode$JsonCombinators.$$float),
              width: Marshal.to_opt(fields, "width", Json_Decode$JsonCombinators.$$float),
              file_path: Marshal.to_opt(fields, "file_path", Json_Decode$JsonCombinators.string),
              vote_average: Marshal.to_opt(fields, "vote_average", Json_Decode$JsonCombinators.$$float),
              vote_count: Marshal.to_opt(fields, "vote_count", Json_Decode$JsonCombinators.$$float)
            };
    });

var cast = Json_Decode$JsonCombinators.object(function (fields) {
      return {
              adult: Marshal.to_opt(fields, "adult", Json_Decode$JsonCombinators.bool),
              gender: Marshal.to_opt(fields, "gender", Json_Decode$JsonCombinators.$$int),
              id: Marshal.to_opt(fields, "id", Json_Decode$JsonCombinators.$$int),
              known_for_department: Marshal.to_opt(fields, "known_for_department", Json_Decode$JsonCombinators.string),
              name: Marshal.to_opt(fields, "name", Json_Decode$JsonCombinators.string),
              popularity: Marshal.to_opt(fields, "popularity", Json_Decode$JsonCombinators.$$float),
              profile_path: Marshal.to_opt(fields, "profile_path", Json_Decode$JsonCombinators.string),
              cast_id: Marshal.to_opt(fields, "cast_id", Json_Decode$JsonCombinators.$$int),
              character: Marshal.to_opt(fields, "character", Json_Decode$JsonCombinators.string),
              credit_id: Marshal.to_opt(fields, "credit_id", Json_Decode$JsonCombinators.string),
              order: Marshal.to_opt(fields, "order", Json_Decode$JsonCombinators.$$int)
            };
    });

var crew = Json_Decode$JsonCombinators.object(function (fields) {
      return {
              adult: Marshal.to_opt(fields, "adult", Json_Decode$JsonCombinators.bool),
              gender: Marshal.to_opt(fields, "gender", Json_Decode$JsonCombinators.$$int),
              id: Marshal.to_opt(fields, "id", Json_Decode$JsonCombinators.$$int),
              known_for_department: Marshal.to_opt(fields, "known_for_department", Json_Decode$JsonCombinators.string),
              name: Marshal.to_opt(fields, "name", Json_Decode$JsonCombinators.string),
              original_name: Marshal.to_opt(fields, "original_name", Json_Decode$JsonCombinators.string),
              popularity: Marshal.to_opt(fields, "popularity", Json_Decode$JsonCombinators.$$float),
              profile_path: Marshal.to_opt(fields, "profile_path", Json_Decode$JsonCombinators.string),
              credit_id: Marshal.to_opt(fields, "credit_id", Json_Decode$JsonCombinators.string),
              department: Marshal.to_opt(fields, "department", Json_Decode$JsonCombinators.string),
              job: Marshal.to_opt(fields, "job", Json_Decode$JsonCombinators.string)
            };
    });

var detail_movie = Json_Decode$JsonCombinators.object(function (fields) {
      return {
              adult: Marshal.to_opt(fields, "adult", Json_Decode$JsonCombinators.bool),
              backdrop_path: Marshal.to_opt(fields, "backdrop_path", Json_Decode$JsonCombinators.string),
              genre_ids: Marshal.to_opt(fields, "genre_ids", Json_Decode$JsonCombinators.array(GenreModel.GenreDecoder.genre)),
              id: fields.required("id", Json_Decode$JsonCombinators.$$int),
              original_language: Marshal.to_opt(fields, "original_language", Json_Decode$JsonCombinators.string),
              original_title: Marshal.to_opt(fields, "original_title", Json_Decode$JsonCombinators.string),
              overview: Marshal.to_opt(fields, "overview", Json_Decode$JsonCombinators.string),
              popularity: Marshal.to_opt(fields, "popularity", Json_Decode$JsonCombinators.$$float),
              poster_path: Marshal.to_opt(fields, "poster_path", Json_Decode$JsonCombinators.string),
              release_date: Marshal.to_opt(fields, "release_date", Json_Decode$JsonCombinators.string),
              runtime: Marshal.to_opt(fields, "runtime", Json_Decode$JsonCombinators.$$float),
              title: Marshal.to_opt(fields, "title", Json_Decode$JsonCombinators.string),
              video: Marshal.to_opt(fields, "video", Json_Decode$JsonCombinators.bool),
              vote_average: Marshal.to_opt(fields, "vote_average", Json_Decode$JsonCombinators.$$float),
              vote_count: Marshal.to_opt(fields, "vote_count", Json_Decode$JsonCombinators.$$int),
              videos: Marshal.to_opt(fields, "videos", Json_Decode$JsonCombinators.array(video)),
              backdrops: Marshal.to_opt(fields, "videos", Json_Decode$JsonCombinators.array(image)),
              posters: Marshal.to_opt(fields, "posters", Json_Decode$JsonCombinators.array(image)),
              casts: Marshal.to_opt(fields, "casts", Json_Decode$JsonCombinators.array(cast)),
              crews: Marshal.to_opt(fields, "crews", Json_Decode$JsonCombinators.array(crew))
            };
    });

function decode(json) {
  return Json$JsonCombinators.decode(json, detail_movie);
}

var Decoder = {
  video: video,
  image: image,
  cast: cast,
  crew: crew,
  detail_movie: detail_movie,
  decode: decode
};

export {
  Decoder ,
}
/* video Not a pure module */
