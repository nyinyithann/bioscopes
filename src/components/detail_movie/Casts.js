// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Util from "../../shared/Util.js";
import * as Links from "../../shared/Links.js";
import * as React from "react";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as MediaQuery from "../../hooks/MediaQuery.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as NotAvailable from "./NotAvailable.js";
import * as LazyImageLite from "../LazyImageLite.js";

function string(prim) {
  return prim;
}

function $$int(prim) {
  return prim;
}

function $$float(prim) {
  return prim;
}

function array(prim) {
  return prim;
}

function getCasts(movie) {
  return Belt_Option.getWithDefault(Belt_Option.getWithDefault(Belt_Option.map(movie.credits, (function (credits) {
                        return credits.cast;
                      })), []), []);
}

function getCaptionElement(cast) {
  var name = Util.getOrEmptyString(cast.name);
  var character = Util.getOrEmptyString(cast.character);
  if (Util.isEmptyString(name) && Util.isEmptyString(character)) {
    return null;
  } else {
    return React.createElement("div", {
                className: "flex flex-col w-full items-start justify-start"
              }, Util.isEmptyString(name) ? null : React.createElement("span", {
                      className: "text-900 text-base max-w-[20rem] text-left"
                    }, name), Util.isEmptyString(character) ? null : React.createElement("span", {
                      className: "text-800 text-[0.85rem] max-w-[20rem] text-left"
                    }, character));
  }
}

function Casts(Props) {
  var movie = Props.movie;
  var isMobile = MediaQuery.useMediaQuery("(max-width: 600px)");
  var casts = getCasts(movie);
  if (Util.isEmptyArray(casts)) {
    return React.createElement(NotAvailable.make, {
                thing: "casts"
              });
  } else {
    return React.createElement("ul", {
                className: "grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 xl:grid-cols-8 gap-2 justify-center items-center w-full list-none"
              }, Belt_Array.map(casts, (function (cast) {
                      var id = Util.getOrIntZero(cast.id).toString();
                      return React.createElement("li", {
                                  key: id,
                                  className: "cursor-pointer flex flex-col w-full gap-2"
                                }, React.createElement(LazyImageLite.make, {
                                      className: "w-full border-2 border-slate-200 rounded-md h-full",
                                      placeholderPath: Links.placeholderImage,
                                      alt: "backdrop image",
                                      src: Links.getPosterImage_W370_H556_bestv2Link(Util.getOrEmptyString(cast.profile_path)),
                                      lazyHeight: isMobile ? 280 : 356,
                                      lazyOffset: 50
                                    }), getCaptionElement(cast));
                    })));
  }
}

var make = Casts;

export {
  string ,
  $$int ,
  $$float ,
  array ,
  getCasts ,
  getCaptionElement ,
  make ,
}
/* react Not a pure module */
