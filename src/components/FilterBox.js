// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as MovieModel from "../models/MovieModel.js";
import * as UrlQueryParam from "../routes/UrlQueryParam.js";
import * as React$1 from "@headlessui/react";
import * as Solid from "@heroicons/react/solid";

function string(prim) {
  return prim;
}

function array(prim) {
  return prim;
}

var filter_data = [
  MovieModel.popularity,
  MovieModel.vote_average,
  MovieModel.original_title,
  MovieModel.release_date
];

var selectedRef = {
  contents: MovieModel.popularity
};

function FilterBox(Props) {
  var match = UrlQueryParam.useQueryParams(undefined);
  var setQueryParam = match[1];
  var queryParam = match[0];
  React.useMemo((function () {
          if (queryParam.TAG !== /* Genre */1) {
            return ;
          }
          var sort_by = queryParam._0.sort_by;
          var x = Belt_Array.getBy(filter_data, (function (x) {
                  return x.id === sort_by;
                }));
          if (x !== undefined) {
            selectedRef.contents = x;
            return ;
          }
          
        }), [queryParam]);
  var onChange = function (v) {
    selectedRef.contents = v;
    if (queryParam.TAG !== /* Genre */1) {
      return ;
    }
    var match = queryParam._0;
    Curry._1(setQueryParam, {
          TAG: /* Genre */1,
          _0: {
            id: match.id,
            name: match.name,
            display: match.display,
            page: match.page,
            sort_by: v.id
          }
        });
  };
  return React.createElement("div", {
              className: "w-[10rem] flex items-center justify-center text-[0.9rem] rounded bg-200 text-700 py-1 px-2 outline-none ring-0 hover:bg-300"
            }, React.createElement(React$1.Listbox, {
                  value: selectedRef.contents,
                  onChange: onChange,
                  children: null
                }, React.createElement(React$1.Listbox.Button, {
                      className: "relative flex w-full h-full items-center justify-center cursor-pointer ring-0 outline-none",
                      children: null
                    }, React.createElement("span", {
                          className: "block truncate"
                        }, selectedRef.contents.name), React.createElement("div", {
                          className: "ml-auto"
                        }, React.createElement("svg", {
                              className: "w-6 h-6",
                              fill: "currentColor",
                              viewBox: "0 0 24 24",
                              xmlns: "http://www.w3.org/2000/svg"
                            }, React.createElement("path", {
                                  clipRule: "evenodd",
                                  d: "M11.47 4.72a.75.75 0 011.06 0l3.75 3.75a.75.75 0 01-1.06 1.06L12 6.31 8.78 9.53a.75.75 0 01-1.06-1.06l3.75-3.75zm-3.75 9.75a.75.75 0 011.06 0L12 17.69l3.22-3.22a.75.75 0 111.06 1.06l-3.75 3.75a.75.75 0 01-1.06 0l-3.75-3.75a.75.75 0 010-1.06z",
                                  fillRule: "evenodd"
                                })))), React.createElement(React$1.Listbox.Options, {
                      className: "absolute mt-[11.2rem] w-[10rem] rounded bg-200 py-2 outline-none ring-0",
                      children: Belt_Array.map(filter_data, (function (item) {
                              return React.createElement(React$1.Listbox.Option, {
                                          value: item,
                                          className: "flex w-full",
                                          children: (function (param) {
                                              return React.createElement("div", {
                                                          className: "" + (
                                                            param.active ? "bg-300" : ""
                                                          ) + " flex w-full pl-2 p-1"
                                                        }, param.selected ? React.createElement(Solid.CheckIcon, {
                                                                className: "h-6 w-6 fill-klor-500"
                                                              }) : React.createElement("span", {
                                                                className: "block h-6 w-6"
                                                              }), React.createElement("span", {
                                                              className: " w-full pl-4"
                                                            }, item.name));
                                            }),
                                          key: item.id
                                        });
                            }))
                    })));
}

var make = FilterBox;

export {
  string ,
  array ,
  filter_data ,
  selectedRef ,
  make ,
}
/* react Not a pure module */
