// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Util from "../shared/Util.js";
import * as Curry from "rescript/lib/es6/curry.js";
import * as Links from "../shared/Links.js";
import * as React from "react";
import * as $$Window from "../hooks/Window.js";
import * as LazyImage from "./LazyImage.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as MediaQuery from "../hooks/MediaQuery.js";
import * as ModalDialog from "./ModalDialog.js";
import * as NotAvailable from "./NotAvailable.js";
import * as PhotosSlider from "./PhotosSlider.js";
import * as Outline from "@heroicons/react/outline";

function string(prim) {
  return prim;
}

function $$int(prim) {
  return prim;
}

function $$float(prim) {
  return prim;
}

function array(prim) {
  return prim;
}

function PhotosViewer$PhotoTitle(Props) {
  var title = Props.title;
  var count = Props.count;
  return React.createElement("div", {
              className: "flex w-full gap-2 items-center font-sans text-900 pb-1"
            }, React.createElement("span", {
                  className: "text-[1rem]"
                }, title), React.createElement("span", {
                  className: "text-[0.85rem]"
                }, "" + count.toString() + " " + (
                  count === 1 ? "image" : "images"
                ) + ""));
}

var PhotoTitle = {
  make: PhotosViewer$PhotoTitle
};

function PhotosViewer(Props) {
  var photos = Props.photos;
  var title = Props.title;
  var isMobile = MediaQuery.useMediaQuery("(max-width: 600px)");
  var match = Belt_Array.partition(photos, (function (x) {
          return x.type_ === "backdrop";
        }));
  var posters = match[1];
  var backdrops = match[0];
  var windowSize = $$Window.useWindowSize(undefined);
  var match$1 = React.useState(function () {
        return {
                isOpen: false,
                currentIndex: 0,
                imageUrls: []
              };
      });
  var setPhotosliderState = match$1[1];
  var photoSliderState = match$1[0];
  var closePhotoslider = function (param) {
    Curry._1(setPhotosliderState, (function (param) {
            return {
                    isOpen: false,
                    currentIndex: 0,
                    imageUrls: photoSliderState.imageUrls
                  };
          }));
  };
  if (Util.isEmptyArray(backdrops) && Util.isEmptyArray(posters)) {
    return React.createElement(NotAvailable.make, {
                thing: "photos"
              });
  } else {
    return React.createElement("div", {
                className: "flex flex-col w-full gap-8"
              }, Util.isEmptyArray(backdrops) ? null : React.createElement("div", {
                      className: "flex flex-col w-full"
                    }, React.createElement(PhotosViewer$PhotoTitle, {
                          title: "" + (
                            Util.isEmptyString(Util.getOrEmptyString(title)) ? "Backdrops" : "" + Util.getOrEmptyString(title) + ""
                          ) + "",
                          count: backdrops.length
                        }), React.createElement("ul", {
                          className: "grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 xl:grid-cols-8 gap-2 justify-center items-center w-full list-none"
                        }, Belt_Array.mapWithIndex(backdrops, (function (i, bd) {
                                return React.createElement("li", {
                                            key: bd.id,
                                            className: "cursor-pointer",
                                            onClick: (function (param) {
                                                Curry._1(setPhotosliderState, (function (param) {
                                                        return {
                                                                isOpen: true,
                                                                currentIndex: i,
                                                                imageUrls: Belt_Array.map(backdrops, (function (x) {
                                                                        return x.url;
                                                                      }))
                                                              };
                                                      }));
                                              })
                                          }, React.createElement(LazyImage.make, {
                                                className: "w-full h-full border-[2px] border-slate-200 rounded-md",
                                                placeholderPath: Links.placeholderImage,
                                                alt: "backdrop image",
                                                src: bd.url,
                                                lazyHeight: isMobile ? 126 : 146,
                                                lazyOffset: 50
                                              }));
                              })))), Util.isEmptyArray(posters) ? null : React.createElement("div", {
                      className: "flex flex-col w-full"
                    }, React.createElement(PhotosViewer$PhotoTitle, {
                          title: "" + (
                            Util.isEmptyString(Util.getOrEmptyString(title)) ? "Posters" : "" + Util.getOrEmptyString(title) + ""
                          ) + "",
                          count: posters.length
                        }), React.createElement("ul", {
                          className: "grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 xl:grid-cols-8 gap-2 justify-center items-center w-full"
                        }, Belt_Array.mapWithIndex(posters, (function (i, bd) {
                                return React.createElement("li", {
                                            key: bd.id,
                                            className: "cursor-pointer",
                                            onClick: (function (param) {
                                                Curry._1(setPhotosliderState, (function (param) {
                                                        return {
                                                                isOpen: true,
                                                                currentIndex: i,
                                                                imageUrls: Belt_Array.map(posters, (function (x) {
                                                                        return x.url;
                                                                      }))
                                                              };
                                                      }));
                                              })
                                          }, React.createElement(LazyImage.make, {
                                                className: "w-full h-full border-[2px] border-slate-200 rounded-md",
                                                placeholderPath: Links.placeholderImage,
                                                alt: "poster image",
                                                src: bd.url,
                                                lazyHeight: isMobile ? 280 : 356,
                                                lazyOffset: 50
                                              }));
                              })))), React.createElement(ModalDialog.make, {
                    isOpen: photoSliderState.isOpen,
                    onClose: closePhotoslider,
                    className: "relative z-50",
                    panelClassName: "w-full h-full transform overflow-hidden transition-all rounded-md bg-black",
                    children: null
                  }, React.createElement("div", {
                        onClick: closePhotoslider
                      }, React.createElement(Outline.XIcon, {
                            className: "absolute z-50 top-2 right-2 w-8 h-8 p-2 border-2 border-slate-400 fill-white stroke-white hover:bg-slate-500 rounded-full bg-slate-900"
                          })), React.createElement(PhotosSlider.make, {
                        imageUrls: photoSliderState.imageUrls,
                        currentImageIndex: photoSliderState.currentIndex,
                        width: windowSize.width - 48 | 0,
                        height: windowSize.height - 48 | 0
                      })));
  }
}

var make = PhotosViewer;

export {
  string ,
  $$int ,
  $$float ,
  array ,
  PhotoTitle ,
  make ,
}
/* react Not a pure module */
