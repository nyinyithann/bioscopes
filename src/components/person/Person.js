// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Imdb from "../social_media/Imdb.js";
import * as Util from "../../shared/Util.js";
import * as Curry from "rescript/lib/es6/curry.js";
import * as Links from "../../shared/Links.js";
import * as Pulse from "../Pulse.js";
import * as React from "react";
import * as Js_int from "rescript/lib/es6/js_int.js";
import * as Twitter from "../social_media/Twitter.js";
import * as $$Document from "../../hooks/Document.js";
import * as Facebook from "../social_media/Facebook.js";
import * as KnownFor from "./KnownFor.js";
import * as Instagram from "../social_media/Instagram.js";
import * as Js_option from "rescript/lib/es6/js_option.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as MediaQuery from "../../hooks/MediaQuery.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as ErrorDialog from "../ErrorDialog.js";
import * as PersonModel from "../../models/PersonModel.js";
import * as WebsiteLink from "../social_media/WebsiteLink.js";
import * as UrlQueryParam from "../../routes/UrlQueryParam.js";
import * as MoviesProvider from "../../providers/MoviesProvider.js";
import * as StorylinePanel from "../detail_movie/StorylinePanel.js";
import * as React$1 from "@headlessui/react";

function string(prim) {
  return prim;
}

function array(prim) {
  return prim;
}

function getImgElem(src, height, imageLoaded, setImageLoaded) {
  return React.createElement("img", {
              className: "transition duration-1000 " + (
                imageLoaded ? "opacity-100" : "opacity-0"
              ) + " pt-2 pr-4 pb-4 float-left w-auto",
              style: {
                height: height.toString() + "px"
              },
              alt: "image",
              src: src,
              onLoad: (function (param) {
                  Curry._1(setImageLoaded, (function (param) {
                          return true;
                        }));
                })
            });
}

function getSocialLinks(person) {
  return React.createElement("div", {
              className: "flex w-full justify-start gap-[1.4rem] pt-6"
            }, React.createElement(Twitter.make, {
                  id: person.twitterId,
                  className: "h-6 w-6 fill-klor-500 hover:fill-klor-900"
                }), React.createElement(Facebook.make, {
                  id: person.facebookId,
                  className: "h-6 w-6 fill-klor-500 hover:fill-klor-900"
                }), React.createElement(Instagram.make, {
                  id: person.instagramId,
                  className: "h-6 w-6 fill-klor-500 hover:fill-klor-900"
                }), React.createElement(Imdb.make, {
                  id: person.imdbId,
                  type_: "name",
                  className: "h-6 w-6 fill-klor-500 hover:fill-klor-900"
                }), React.createElement(WebsiteLink.make, {
                  link: person.websiteLink,
                  className: "h-6 w-6 fill-klor-50 stroke-klor-500 hover:fill-klor-900"
                }));
}

function getAge(person) {
  var birthday = Util.getOrEmptyString(person.birthday);
  var deathday = Util.getOrEmptyString(person.deathday);
  var calcAge = function (birthDay, zDay) {
    try {
      var by = birthDay.getFullYear();
      var zy = zDay.getFullYear();
      var bMonth = birthDay.getMonth();
      var bDay = birthDay.getDay();
      var d_Month = zDay.getMonth();
      var d_Day = zDay.getDay();
      var age = zy - by | 0;
      if (bMonth > d_Month || bMonth === d_Month && bDay > d_Day) {
        return age - 1 | 0;
      } else {
        return age;
      }
    }
    catch (exn){
      return Js_int.min;
    }
  };
  if (deathday !== "") {
    var bDate = new Date(birthday);
    var d_Date = new Date(deathday);
    return calcAge(bDate, d_Date);
  }
  var bDate$1 = new Date(birthday);
  var c_Date = new Date();
  return calcAge(bDate$1, c_Date);
}

function Person(Props) {
  var isMedium = MediaQuery.useMediaQuery("(max-width: 900px)");
  var match = React.useState(function () {
        return false;
      });
  var match$1 = UrlQueryParam.useQueryParams(undefined);
  var queryParam = match$1[0];
  var match$2 = MoviesProvider.useMoviesContext(undefined);
  var clearError = match$2.clearError;
  var loadPerson = match$2.loadPerson;
  var error = match$2.error;
  var loading = match$2.loading;
  var person = match$2.person;
  var personVM = React.useRef(undefined);
  React.useEffect((function () {
          var controller = new AbortController();
          if (queryParam.TAG === /* Person */4) {
            Curry._2(loadPerson, {
                  TAG: /* Person */4,
                  _0: {
                    id: queryParam._0.id
                  }
                }, controller.signal);
          }
          return (function (param) {
                    controller.abort("Cancel the request");
                  });
        }), []);
  React.useMemo((function () {
          if (person.id === PersonModel.initial_invalid_id) {
            return ;
          }
          var profilePath = Util.getOrEmptyString(person.profile_path);
          var profileImagePath = profilePath !== "" ? Links.getPosterImage_W370_H556_bestv2Link(profilePath) : "";
          personVM.current = {
            id: person.id.toString(),
            name: Js_option.getWithDefault("üèÉ", person.name),
            profileImagePath: profileImagePath,
            biography: Belt_Array.keep(Util.getOrEmptyString(person.biography).split("\n"), (function (x) {
                    return x !== "";
                  })),
            knownFor: Util.getOrEmptyString(person.known_for_department),
            born: Util.toLocaleString(person.birthday, undefined, undefined),
            died: Util.toLocaleString(person.deathday, undefined, undefined),
            age: getAge(person),
            placeOfBirth: Util.getOrEmptyString(person.place_of_birth),
            imdbId: Util.getOrEmptyString(Belt_Option.map(person.external_ids, (function (x) {
                        return Util.getOrEmptyString(x.imdb_id);
                      }))),
            twitterId: Util.getOrEmptyString(Belt_Option.map(person.external_ids, (function (x) {
                        return Util.getOrEmptyString(x.twitter_id);
                      }))),
            facebookId: Util.getOrEmptyString(Belt_Option.map(person.external_ids, (function (x) {
                        return Util.getOrEmptyString(x.facebook_id);
                      }))),
            instagramId: Util.getOrEmptyString(Belt_Option.map(person.external_ids, (function (x) {
                        return Util.getOrEmptyString(x.instagram_id);
                      }))),
            websiteLink: Util.getOrEmptyString(person.homepage)
          };
        }), [person]);
  $$Document.useTitle(Util.getOrEmptyString(person.name));
  var onClose = function (arg) {
    if (arg) {
      return Curry._1(clearError, undefined);
    }
    
  };
  var personVM$1 = personVM.current;
  if (personVM$1 !== undefined) {
    return React.createElement("main", {
                className: "flex flex-col items-center justify-center w-full py-2"
              }, React.createElement(Pulse.make, {
                    show: loading
                  }), React.createElement("div", undefined, React.createElement("p", {
                        className: "block lg:hidden font-nav font-semibold text-[1.4rem] pb-1 pl-4"
                      }, personVM$1.name), React.createElement("div", {
                        className: "block px-4 py-2"
                      }, personVM$1.profileImagePath !== "" ? getImgElem(personVM$1.profileImagePath, 280, match[0], match[1]) : null, React.createElement("div", undefined, React.createElement("p", {
                                className: "hidden lg:block font-nav font-semibold text-[1.4rem] pb-2"
                              }, personVM$1.name), Belt_Array.map(personVM$1.biography, (function (x) {
                                  return React.createElement("p", {
                                              key: x.slice(0, 32),
                                              className: "pb-2 prose-base w-auto md:w-[60vw]"
                                            }, x);
                                })), React.createElement("div", {
                                className: "flex flex-col items-start justify-start prose pt-6 w-[22rem]"
                              }, personVM$1.knownFor !== "" ? React.createElement(StorylinePanel.Pair.make, {
                                      title: "Known For",
                                      value: personVM$1.knownFor
                                    }) : null, personVM$1.born !== "" ? (
                                  personVM$1.died === "" && personVM$1.age !== Js_int.min ? React.createElement(StorylinePanel.Pair.make, {
                                          title: "Born",
                                          value: "" + personVM$1.born + " (age " + personVM$1.age.toString() + ")"
                                        }) : React.createElement(StorylinePanel.Pair.make, {
                                          title: "Born",
                                          value: personVM$1.born
                                        })
                                ) : null, personVM$1.died !== "" ? (
                                  personVM$1.age !== Js_int.min ? React.createElement(StorylinePanel.Pair.make, {
                                          title: "Died",
                                          value: "" + personVM$1.died + " (age " + personVM$1.age.toString() + ")"
                                        }) : React.createElement(StorylinePanel.Pair.make, {
                                          title: "Died",
                                          value: personVM$1.died
                                        })
                                ) : null, personVM$1.placeOfBirth !== "" ? React.createElement(StorylinePanel.Pair.make, {
                                      title: "Place of Birth",
                                      value: personVM$1.placeOfBirth
                                    }) : null), isMedium ? null : getSocialLinks(personVM$1)), isMedium ? getSocialLinks(personVM$1) : null)), React.createElement("div", {
                    className: "w-full flex flex-col items-center justify-center pt-8",
                    id: "movie_info_tab_container"
                  }, React.createElement(React$1.Tab.Group, {
                        children: (function (selectedIndex) {
                            return React.createElement("div", {
                                        className: "flex flex-col w-full"
                                      }, React.createElement(React$1.Tab.List, {
                                            className: "flex w-full flex-nowrap items-center justify-around",
                                            children: (function (param) {
                                                return React.createElement(React.Fragment, undefined, React.createElement(React$1.Tab, {
                                                                className: "control-color flex flex-col items-center justify-center w-full h-full outline-none ring-0 border-r-[1px] border-300",
                                                                children: (function (props) {
                                                                    return React.createElement("div", {
                                                                                className: "" + (
                                                                                  props.selected ? "bg-300 text-900" : ""
                                                                                ) + " w-full h-full control-color flex items-center justify-center py-2 font-semibold"
                                                                              }, "KNOWN FOR");
                                                                  }),
                                                                key: "knownfor"
                                                              }), React.createElement(React$1.Tab, {
                                                                className: "control-color flex flex-col items-center justify-center w-full h-full outline-none ring-0 border-r-[1px] border-300",
                                                                children: (function (props) {
                                                                    return React.createElement("div", {
                                                                                className: "" + (
                                                                                  props.selected ? "bg-300 text-900" : ""
                                                                                ) + " w-full h-full control-color flex items-center justify-center py-2 font-semibold"
                                                                              }, "CREDITS");
                                                                  }),
                                                                key: "credits"
                                                              }), React.createElement(React$1.Tab, {
                                                                className: "control-color flex flex-col items-center justify-center w-full h-full outline-none ring-0 border-r-[1px] border-300",
                                                                children: (function (props) {
                                                                    return React.createElement("div", {
                                                                                className: "" + (
                                                                                  props.selected ? "bg-300 text-900" : ""
                                                                                ) + " w-full h-full control-color flex items-center justify-center py-2 font-semibold"
                                                                              }, "PHOTOS");
                                                                  }),
                                                                key: "photos"
                                                              }));
                                              })
                                          }), React.createElement(React$1.Tab.Panels, {
                                            className: "pt-1",
                                            children: (function (props) {
                                                return React.createElement(React.Fragment, undefined, React.createElement(React$1.Tab.Panel, {
                                                                children: (function (props) {
                                                                    return React.createElement("div", {
                                                                                className: "flex w-full p-2"
                                                                              }, React.createElement(KnownFor.make, {
                                                                                    person: person
                                                                                  }));
                                                                  }),
                                                                key: "knownfor-panel"
                                                              }), React.createElement(React$1.Tab.Panel, {
                                                                children: (function (props) {
                                                                    return React.createElement("div", {
                                                                                className: "flex w-full p-2"
                                                                              });
                                                                  }),
                                                                key: "credits-panel"
                                                              }), React.createElement(React$1.Tab.Panel, {
                                                                children: (function (props) {
                                                                    return React.createElement("div", {
                                                                                className: "flex w-full p-2"
                                                                              });
                                                                  }),
                                                                key: "photos-panel"
                                                              }));
                                              })
                                          }));
                          })
                      }), React.createElement(KnownFor.make, {
                        person: MoviesProvider.emptyPerson
                      })), error.length > 0 ? React.createElement(ErrorDialog.make, {
                      isOpen: error.length > 0,
                      errorMessage: error,
                      onClose: onClose
                    }) : null);
  } else {
    return React.createElement(Pulse.make, {
                show: loading
              });
  }
}

var make = React.memo(Person);

export {
  string ,
  array ,
  getImgElem ,
  getSocialLinks ,
  getAge ,
  make ,
}
/* make Not a pure module */
