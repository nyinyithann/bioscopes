// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as Links from "../shared/Links.js";
import * as React from "react";
import * as Loading from "./Loading.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Solid from "@heroicons/react/solid";

function $$int(prim) {
  return prim;
}

function string(prim) {
  return prim;
}

var baseBtnClass = "flex items-center justify-center ring-0 outline-none bg-white bg-opacity-20 backdrop-blur-lg drop-shadow-lg p-1 group hover:bg-opacity-80";

function getLeftRightAvailability(imgCount, index) {
  return [
          index > 0,
          index < imgCount
        ];
}

function PhotosSlider(Props) {
  var imageUrls = Props.imageUrls;
  var currentImageIndex = Props.currentImageIndex;
  var width = Props.width;
  var height = Props.height;
  var getUrl = function (i) {
    try {
      return Belt_Array.getExn(imageUrls, i);
    }
    catch (exn){
      return "";
    }
  };
  var match = getLeftRightAvailability(imageUrls.length, currentImageIndex);
  var rhs = match[1];
  var lhs = match[0];
  var match$1 = React.useState(function () {
        return {
                url: getUrl(currentImageIndex),
                index: currentImageIndex,
                leftAvailable: lhs,
                rightAvailable: rhs,
                loaded: false
              };
      });
  var setState = match$1[1];
  var state = match$1[0];
  var containerSize = {
    height: height.toString() + "px",
    width: (width - 16 | 0).toString() + "px"
  };
  var imgSize = {
    height: (height - 48 | 0).toString() + "px",
    width: width.toString() + "px"
  };
  var next = function (e) {
    e.preventDefault();
    var imgCount = imageUrls.length;
    var nextIndex = state.index + 1 | 0;
    if (nextIndex >= imgCount) {
      return ;
    }
    var match = getLeftRightAvailability(imgCount, nextIndex);
    var rhs = match[1];
    var lhs = match[0];
    Curry._1(setState, (function (param) {
            return {
                    url: getUrl(nextIndex),
                    index: nextIndex,
                    leftAvailable: lhs,
                    rightAvailable: rhs,
                    loaded: false
                  };
          }));
  };
  var prev = function (e) {
    e.preventDefault();
    var imgCount = imageUrls.length;
    var prevIndex = state.index - 1 | 0;
    if (prevIndex < 0) {
      return ;
    }
    var match = getLeftRightAvailability(imgCount, prevIndex);
    var rhs = match[1];
    var lhs = match[0];
    Curry._1(setState, (function (param) {
            return {
                    url: getUrl(prevIndex),
                    index: prevIndex,
                    leftAvailable: lhs,
                    rightAvailable: rhs,
                    loaded: false
                  };
          }));
  };
  return React.createElement("div", {
              className: "relative flex flex-col items-center justify-center",
              style: containerSize
            }, React.createElement("div", {
                  className: "flex flex-col items-center justify-center"
                }, state.loaded ? null : React.createElement("div", {
                        className: "absolute top-[" + (height / 2 | 0).toString() + " ++ \"px\"] w-full h-full flex flex-col items-center justify-center animate-pulse bg-50"
                      }, React.createElement(Loading.make, {
                            className: "w-[8rem] h-[5rem] stroke-[0.2rem] p-3 stroke-white text-700 dark:fill-slate-600 dark:stroke-slate-400 dark:text-900"
                          })), React.createElement("img", {
                      className: "object-contain m-auto",
                      style: imgSize,
                      src: state.url,
                      onError: (function (e) {
                          if (e.target.src !== Links.placeholderImage) {
                            e.target.src = Links.placeholderImage;
                            return ;
                          }
                          
                        }),
                      onLoad: (function (param) {
                          Curry._1(setState, (function (prev) {
                                  return {
                                          url: prev.url,
                                          index: prev.index,
                                          leftAvailable: prev.leftAvailable,
                                          rightAvailable: prev.rightAvailable,
                                          loaded: true
                                        };
                                }));
                        })
                    })), React.createElement("div", {
                  className: "flex items-center justify-center mt-auto z-50 p-[8px] rounded-t-2xl bg-white bg-opacity-20 backdrop-blur-lg drop-shadow-lg absolute bottom-0"
                }, React.createElement("button", {
                      className: "" + baseBtnClass + " rounded-l-full",
                      disabled: !state.leftAvailable,
                      type: "button",
                      onClick: prev
                    }, React.createElement(Solid.ArrowNarrowLeftIcon, {
                          className: "w-6 h-6 fill-klor-500"
                        })), React.createElement("span", {
                      className: "rounded-md px-6 py-2 text-white text-center w-[4rem] flex items-center justify-center"
                    }, "" + (state.index + 1 | 0).toString() + "/" + imageUrls.length.toString() + ""), React.createElement("button", {
                      className: "" + baseBtnClass + " rounded-r-full",
                      disabled: !state.rightAvailable,
                      type: "button",
                      onClick: next
                    }, React.createElement(Solid.ArrowNarrowRightIcon, {
                          className: "w-6 h-6 fill-klor-500"
                        }))));
}

var make = PhotosSlider;

export {
  $$int ,
  string ,
  baseBtnClass ,
  getLeftRightAvailability ,
  make ,
}
/* react Not a pure module */
