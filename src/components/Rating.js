// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Js_option from "rescript/lib/es6/js_option.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Caml_float from "rescript/lib/es6/caml_float.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";

function Rating$FullStar(Props) {
  var className = Props.className;
  var tmp = {
    enableBackground: "new 0 0 24 24",
    viewBox: "0 0 24 24",
    xmlns: "http://www.w3.org/2000/svg"
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  return React.createElement("svg", tmp, React.createElement("g", undefined, React.createElement("path", {
                      d: "M12 17.27 18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27z"
                    })));
}

var FullStar = {
  make: Rating$FullStar
};

function Rating$HalfStar(Props) {
  var className = Props.className;
  var tmp = {
    viewBox: "0 0 24 24",
    xmlns: "http://www.w3.org/2000/svg"
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  return React.createElement("svg", tmp, React.createElement("path", {
                  d: "M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4V6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z"
                }));
}

var HalfStar = {
  make: Rating$HalfStar
};

function Rating(Props) {
  var ratingValue = Props.ratingValue;
  var stars = React.useRef([]);
  React.useMemo((function () {
          var rv = Js_option.getWithDefault(0.0, ratingValue);
          var n = rv / 2;
          var fsc = n | 0;
          var match = Caml_float.modf_float(rv);
          var hfc = match[0] >= 0.5 ? 1 : 0;
          for(var i = 0; i < fsc; ++i){
            stars.current.push(React.createElement(Rating$FullStar, {
                      className: "w-6 h-6 fill-yellow-400 stroke-0",
                      key: String(Math.imul(i + 10 | 0, fsc))
                    }));
          }
          for(var i$1 = 0; i$1 < hfc; ++i$1){
            stars.current.push(React.createElement(Rating$HalfStar, {
                      className: "w-6 h-6 fill-yellow-400 stroke-0",
                      key: String(Math.imul(i$1 + 1 | 0, hfc))
                    }));
          }
          for(var i$2 = 0; i$2 <= 4; ++i$2){
            var match$1 = Belt_Array.get(stars.current, i$2);
            if (match$1 !== undefined) {
              
            } else {
              stars.current.push(React.createElement(Rating$FullStar, {
                        className: "w-6 h-6 fill-gray-400 stroke-0",
                        key: String(Math.imul(i$2, 100))
                      }));
            }
          }
        }), [ratingValue]);
  return React.createElement("div", undefined, React.createElement("div", {
                  className: "flex"
                }, stars.current));
}

var make = Rating;

export {
  FullStar ,
  HalfStar ,
  make ,
}
/* react Not a pure module */
