// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as Js_exn from "rescript/lib/es6/js_exn.js";
import * as $$Promise from "@ryyppy/rescript-promise/src/Promise.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";

var apiBaseUrl = "https://api.themoviedb.org";

var apiVersion = "3";

var contentType = [
  "Content-type",
  "application/json"
];

var authorization_1 = "Bearer " + process.env.NEXT_PUBLIC_TMDB_API_READ_ACCESS_TOKEN + "";

var authorization = [
  "Authorization",
  authorization_1
];

function checkResponseStatus(promise) {
  return promise.then(function (response) {
              if (response.ok) {
                return Promise.resolve({
                            TAG: /* Ok */0,
                            _0: response.json()
                          });
              } else {
                return Promise.resolve({
                            TAG: /* Error */1,
                            _0: "Error with status code: " + response.status.toString() + ", status text: " + response.statusText + ""
                          });
              }
            });
}

function catchPromiseFault(promise) {
  return $$Promise.$$catch(promise, (function (e) {
                if (e.RE_EXN_ID !== Js_exn.$$Error) {
                  return Promise.resolve({
                              TAG: /* Error */1,
                              _0: "Unexpected Error"
                            });
                }
                var msg = e._1.message;
                if (msg !== undefined) {
                  return Promise.resolve({
                              TAG: /* Error */1,
                              _0: msg
                            });
                } else {
                  return Promise.resolve({
                              TAG: /* Error */1,
                              _0: "Unexpected Error"
                            });
                }
              }));
}

function handleResponse(promise, callback, param) {
  return promise.then(function (result) {
              if (result.TAG === /* Ok */0) {
                result._0.then(function (data) {
                      Curry._1(callback, data);
                      return Promise.resolve(undefined);
                    });
              } else {
                console.log(result._0);
              }
              return Promise.resolve(undefined);
            });
}

function getMovies(apiPath, callback, signal, param) {
  return handleResponse(catchPromiseFault(checkResponseStatus(fetch(apiPath, {
                          method: "GET",
                          headers: Caml_option.some(new Headers([
                                    contentType,
                                    authorization
                                  ])),
                          signal: signal
                        }))), callback, undefined);
}

function getGenres(callback, signal, param) {
  var apiPath = "" + apiBaseUrl + "/" + apiVersion + "/genre/movie/list";
  return handleResponse(catchPromiseFault(checkResponseStatus(fetch(apiPath, {
                          method: "GET",
                          headers: Caml_option.some(new Headers([
                                    contentType,
                                    authorization
                                  ])),
                          signal: signal
                        }))), callback, undefined);
}

export {
  apiBaseUrl ,
  apiVersion ,
  contentType ,
  authorization ,
  checkResponseStatus ,
  catchPromiseFault ,
  handleResponse ,
  getMovies ,
  getGenres ,
}
/* authorization Not a pure module */
