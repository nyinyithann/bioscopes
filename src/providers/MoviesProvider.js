// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as MovieAPI from "../http/MovieAPI.js";
import * as MovieModel from "../models/MovieModel.js";

var emptyMovieList_results = [];

var emptyMovieList = {
  page: 0,
  results: emptyMovieList_results,
  total_pages: 0,
  total_results: 0
};

var initialState_apiParams = {
  TAG: /* Category */0,
  type_: "popular",
  page: 1
};

var initialState = {
  apiParams: initialState_apiParams,
  movies: emptyMovieList,
  loading: false,
  error: ""
};

function initialContextValue_loadMovies(param) {
  
}

var initialContextValue = {
  movies: emptyMovieList,
  loading: false,
  error: "",
  loadMovies: initialContextValue_loadMovies
};

var context = React.createContext(initialContextValue);

var provider = context.Provider;

function MoviesProvider$MoviesContext$Provider(Props) {
  var value = Props.value;
  var children = Props.children;
  return React.createElement(provider, {
              value: value,
              children: children
            });
}

var Provider = {
  provider: provider,
  make: MoviesProvider$MoviesContext$Provider
};

var MoviesContext = {
  initialContextValue: initialContextValue,
  context: context,
  Provider: Provider
};

function reducer(state, action) {
  switch (action.TAG | 0) {
    case /* Loading */0 :
        return {
                apiParams: action._0,
                movies: state.movies,
                loading: true,
                error: ""
              };
    case /* Error */1 :
        return {
                apiParams: state.apiParams,
                movies: state.movies,
                loading: false,
                error: action._0
              };
    case /* Success */2 :
        return {
                apiParams: state.apiParams,
                movies: action._0,
                loading: false,
                error: ""
              };
    
  }
}

function loadMoviesInternal(dispatch, apiParams) {
  var apiPath;
  apiPath = apiParams.TAG === /* Category */0 ? "" + MovieAPI.apiBaseUrl + "/" + MovieAPI.apiVersion + "/movie/" + apiParams.type_ + "?page=" + apiParams.page.toString() + "" : "";
  var callback = function (json) {
    var ml = MovieModel.MovieListDecoder.decode(json);
    if (ml.TAG === /* Ok */0) {
      return Curry._1(dispatch, {
                  TAG: /* Success */2,
                  _0: ml._0
                });
    } else {
      return Curry._1(dispatch, {
                  TAG: /* Error */1,
                  _0: ml._0
                });
    }
  };
  Curry._1(dispatch, {
        TAG: /* Loading */0,
        _0: apiParams
      });
  MovieAPI.getMovies(apiPath, callback, undefined, undefined);
}

function MoviesProvider(Props) {
  var children = Props.children;
  var match = React.useReducer(reducer, initialState);
  var dispatch = match[1];
  var state = match[0];
  var loadMovies = React.useMemo((function () {
          return function (param) {
            return loadMoviesInternal(dispatch, param);
          };
        }), [dispatch]);
  var value_movies = state.movies;
  var value_loading = state.loading;
  var value_error = state.error;
  var value = {
    movies: value_movies,
    loading: value_loading,
    error: value_error,
    loadMovies: loadMovies
  };
  return React.createElement(MoviesProvider$MoviesContext$Provider, {
              value: value,
              children: children
            });
}

function usePopularMovies(param) {
  return React.useContext(context);
}

var make = MoviesProvider;

export {
  emptyMovieList ,
  initialState ,
  MoviesContext ,
  reducer ,
  loadMoviesInternal ,
  make ,
  usePopularMovies ,
}
/* context Not a pure module */
